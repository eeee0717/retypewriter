// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`animator > animator 1`] = `
[
  {
    "cursor": 91,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-patch'

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 90,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-patch

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 89,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-patc

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 88,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-pat

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 87,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-pa

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 86,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-p

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 85,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match-

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 84,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-match

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 83,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-matc

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 82,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-mat

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 81,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-ma

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 80,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-m

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 79,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff-

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 78,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'diff

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 77,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'dif

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 76,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'di

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 75,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 'd

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 74,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from '

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 73,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from 

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 72,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } from

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 71,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } fro

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 70,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } fr

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 69,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } f

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 68,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff } 

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 67,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff }

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 66,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff 

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 65,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Diff

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 64,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Dif

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 63,
    "output": "
import { describe, expect, it } from 'vitest'
import type { Di

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 62,
    "output": "
import { describe, expect, it } from 'vitest'
import type { D

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 61,
    "output": "
import { describe, expect, it } from 'vitest'
import type { 

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 60,
    "output": "
import { describe, expect, it } from 'vitest'
import type {

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 59,
    "output": "
import { describe, expect, it } from 'vitest'
import type 

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 58,
    "output": "
import { describe, expect, it } from 'vitest'
import type

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 57,
    "output": "
import { describe, expect, it } from 'vitest'
import typ

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 56,
    "output": "
import { describe, expect, it } from 'vitest'
import ty

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 55,
    "output": "
import { describe, expect, it } from 'vitest'
import t

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 54,
    "output": "
import { describe, expect, it } from 'vitest'
import 

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 53,
    "output": "
import { describe, expect, it } from 'vitest'
import

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 52,
    "output": "
import { describe, expect, it } from 'vitest'
impor

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 51,
    "output": "
import { describe, expect, it } from 'vitest'
impo

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 50,
    "output": "
import { describe, expect, it } from 'vitest'
imp

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 49,
    "output": "
import { describe, expect, it } from 'vitest'
im

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 48,
    "output": "
import { describe, expect, it } from 'vitest'
i

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 47,
    "output": "
import { describe, expect, it } from 'vitest'


describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 46,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 89,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exported', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 88,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exporte', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 87,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('export', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 86,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('expor', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 85,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('expo', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 84,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exp', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 83,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('ex', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 82,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('e', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 81,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 82,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('o', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 83,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('on', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 84,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
  })
})
",
  },
  {
    "cursor": 121,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
   })
})
",
  },
  {
    "cursor": 122,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    })
})
",
  },
  {
    "cursor": 123,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
     })
})
",
  },
  {
    "cursor": 124,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
      })
})
",
  },
  {
    "cursor": 125,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    e  })
})
",
  },
  {
    "cursor": 126,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    ex  })
})
",
  },
  {
    "cursor": 127,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    exp  })
})
",
  },
  {
    "cursor": 128,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expe  })
})
",
  },
  {
    "cursor": 129,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expec  })
})
",
  },
  {
    "cursor": 130,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect  })
})
",
  },
  {
    "cursor": 131,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(  })
})
",
  },
  {
    "cursor": 132,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2  })
})
",
  },
  {
    "cursor": 133,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2)  })
})
",
  },
  {
    "cursor": 134,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).  })
})
",
  },
  {
    "cursor": 135,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).t  })
})
",
  },
  {
    "cursor": 136,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).to  })
})
",
  },
  {
    "cursor": 137,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toE  })
})
",
  },
  {
    "cursor": 138,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEq  })
})
",
  },
  {
    "cursor": 139,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqu  })
})
",
  },
  {
    "cursor": 140,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqua  })
})
",
  },
  {
    "cursor": 141,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqual  })
})
",
  },
  {
    "cursor": 142,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqual(  })
})
",
  },
  {
    "cursor": 143,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqual(2  })
})
",
  },
  {
    "cursor": 144,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqual(2)  })
})
",
  },
  {
    "cursor": 145,
    "output": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(1).toEqual(1)
    expect(2).toEqual(2)
  })
})
",
  },
]
`;
